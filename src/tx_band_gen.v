`timescale 1ns / 1ps

module tx_band_gen(
    input clk,       // Clock signal (system clock)
    input rst,       // Reset signal (active high)
    input band_sig,  // Input signal to enable baud rate clock generation
    output reg clk_bps // Baud rate clock signal generated by the module
    );

    // Parameters for system and baud rate configuration
    parameter SYS_RATE = 100000000;    // System clock frequency (100 MHz)
    parameter BAND_RATE = 9600;        // Desired baud rate (9600 bps)
    parameter CNT_BAND = SYS_RATE / BAND_RATE; // Number of system clock cycles per baud period

    // Register for counting clock cycles to generate baud rate clock
    reg [13:0] cnt_bps;

    // Always block triggered on rising edge of clk or reset signal (rst)
    always @( posedge clk or posedge rst )
        if( rst )  // If reset is high, initialize counter and baud clock
            begin
                cnt_bps <= CNT_BAND - 1'b1; // Set counter to one less than CNT_BAND to generate an accurate pulse
                clk_bps <= 1'b0;             // Initialize baud clock to low
            end
        else if( !band_sig )  // If band_sig is low, reset the counter and keep baud clock low
            begin
                cnt_bps <= CNT_BAND - 1'b1; // Reset counter to one less than CNT_BAND
                clk_bps <= 1'b0;             // Keep baud clock low
            end
        else if( cnt_bps == CNT_BAND )  // When counter reaches CNT_BAND, toggle baud clock
            begin
                cnt_bps <= 14'd0;           // Reset the counter to 0
                clk_bps <= 1'b1;            // Set baud clock high for one clock cycle
            end
        else  // If none of the above conditions are met, increment the counter and keep baud clock low
            begin
                cnt_bps <= cnt_bps + 1'b1;  // Increment the counter by 1
                clk_bps <= 1'b0;            // Keep baud clock low
            end

endmodule
